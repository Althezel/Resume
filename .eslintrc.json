{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "airbnb",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "react-hooks"
    ],
    "rules": {
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "ts": "never",
                "tsx": "never"
            }
        ],
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 4
            }
        ],
        "linebreak-style": ["error", "windows"],
        "max-len": [
            "warn",
            {
                "code": 120,
                "ignoreRegExpLiterals": true,
                "ignoreTemplateLiterals": true,
                "ignoreStrings": true,
                "ignoreUrls": true
            }
        ],
        "no-shadow": "off",
        "no-use-before-define": "off",
        "react/destructuring-assignment": "off",
        "react/function-component-definition": ["error",
            {
                "namedComponents": "arrow-function" ,
                "unnamedComponents": "arrow-function"
            }
        ],
        "react/jsx-indent": ["error", 4],
        "react/jsx-filename-extension": [
            "warn",
            {
                "extensions": [".tsx"]
            }
        ],
        "react/prop-types": "off",
        "react/require-default-props": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-use-before-define": ["error"]
    },
    "settings": {
        "import/resolver": {
            "typescript": {}
        }
    }
}
